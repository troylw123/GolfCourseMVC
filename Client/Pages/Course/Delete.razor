@page "/course/delete/{Id:int}"
@using GolfCourseMVC.Shared.Models.Course
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

<h3>Delete Course?</h3>

@if (Message != null)
{
    <h2 class="text-danger">@Message</h2>
}
@if (Course != null)
{
        <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span><strong>Course #@Course.Id</strong></span>
            </div>
            <div class="card-body">
                <table class="table">
                    <tr>
                        <th>Name: </th>
                        <td>@Course.Name</td>
                    </tr>
                    <tr>
                        <th>Address: </th>
                        <td>@Course.Address</td>
                    </tr>
                    <tr>
                        <th>Length: </th>
                        <td>@Course.Length yards</td>
                    </tr>
                </table>
            </div>
            <div class="d-flex justify-content-center mt-3 mb-3">
                <div class="text-center justify-content-between w-50">
                    <a href=@($"/course/id/{Id}") class="btn btn-outline-primary">Back to Course Details</a>
                    <a href="#" @onclick="HandleClick" class="btn btn-danger text-white">Delete Course</a>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int Id { get; set; }
    public CourseDetail Course { get; set; }
    public string Message { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Course = await http.GetFromJsonAsync<CourseDetail>($"/api/course/id/{Id}");
    }

    private async void HandleClick()
    {
        var deleteRes = await http.DeleteAsync($"/api/course/{Id}");
        if(deleteRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/course");
        }
        else
        {
            Message = "Failed to delete course.";
            await InvokeAsync(StateHasChanged);
        }
    }
}
