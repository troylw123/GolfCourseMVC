@page "/course/delete/{Id}"
@using GolfCourseMVC.Shared.Models.Course
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

<h3>Delete Course #@CourseId</h3>

@if (Message != null)
{
    <h2 class="text-danger">@Message</h2>
}
@if (Course != null)
{
        <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Course #@Course.Id</span>
                <span class="text-muted"><strong>@Course.Name</strong></span>
            </div>
            <div class="card-body">
                <p class="card-text">@Course.Address</p>
                <p class="card-text">@Course.Length</p>
            </div>
            <div class="d-flex justify-content-center mt-3">
                <div class="text-center justify-content-between w-50">
                    <a href=@($"/course/{CourseId}") class="btn btn-outline-primary">Back to Course Details</a>
                    <a href="#" @onclick="HandleClick" class="btn btn-danger text-white">Delete Course</a>"
                </div>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int CourseId { get; set; }
    public CourseDetail Course { get; set; }
    public string Message { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Course = await http.GetFromJsonAsync<CourseDetail>($"/api/course/{CourseId}");
    }

    private async void HandleClick()
    {
        var deleteRes = await http.DeleteAsync($"/api/course/{CourseId}");
        if(deleteRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/course");
        }
        else
        {
            Message = "Failed to delete course.";
        }
    }
}
